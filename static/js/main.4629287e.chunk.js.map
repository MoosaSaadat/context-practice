{"version":3,"sources":["contexts/ThemeContext.js","PageContent.js","contexts/LanguageContext.js","Navbar.js","styles/NavbarStyles.js","contexts/LoggedInContext.js","Form.js","styles/FormStyles.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","props","_useState","useState","_useState2","Object","slicedToArray","isDarkMode","setMode","react_default","a","createElement","Provider","value","toggleTheme","children","PageContent","styles","backgroundColor","useContext","width","height","style","LanguageContext","LanguageProvider","language","setLanguage","changeLanguage","e","target","withStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","defineProperty","display","breakpoints","up","classes","_useContext","languageTranslation","english","colorMode","french","spanish","className","AppBar","position","color","Toolbar","IconButton","edge","aria-label","VerifiedUser_default","Typography","variant","noWrap","FormControlLabel","control","Switch","onChange","label","LoggedInContext","LoggedInProvider","isLoggedIn","setLoggedIn","toggleLogin","signIn","email","pass","rememberMe","logOut","main","marginLeft","paper","marginTop","flexDirection","alignItems","padding","concat","typo","marginBottom","avatar","margin","palette","secondary","form","submit","loginIcon","fontSize","fill","_useContext2","loginForm","Paper","Avatar","LockOutlined_default","Select","MenuItem","onSubmit","FormControl","required","fullWidth","InputLabel","htmlFor","Input","id","name","type","Checkbox","Button","loggedIn","CheckCircle_default","onClick","App","src_PageContent","src_Navbar","src_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4629287e.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nconst ThemeContext = createContext();\n\nfunction ThemeProvider (props) {\n\tconst [ isDarkMode, setMode ] = useState(false);\n\tconst toggleTheme = () => setMode(!isDarkMode);\n\treturn (\n\t\t<ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n\t\t\t{props.children}\n\t\t</ThemeContext.Provider>\n\t);\n}\n\nexport { ThemeContext, ThemeProvider };\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\n\nfunction PageContent (props) {\n\tconst { isDarkMode } = useContext(ThemeContext);\n\tconst styles = {\n\t\tbackgroundColor: isDarkMode ? \"black\" : \"white\",\n\t\twidth: \"100vw\",\n\t\theight: \"100vh\"\n\t};\n\treturn <div style={styles}>{props.children}</div>;\n}\n\nexport default PageContent;\n","import React, { createContext, useState } from \"react\";\n\nconst LanguageContext = createContext();\n\nfunction LanguageProvider (props) {\n\tconst [ language, setLanguage ] = useState(\"english\");\n\tconst changeLanguage = (e) => {\n\t\tsetLanguage(e.target.value);\n\t};\n\treturn (\n\t\t<LanguageContext.Provider value={{ language, changeLanguage }}>\n\t\t\t{props.children}\n\t\t</LanguageContext.Provider>\n\t);\n}\n\nexport { LanguageContext, LanguageProvider };\n","import React, { useContext } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Switch from \"@material-ui/core/Switch\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport styles from \"./styles/NavbarStyles\";\nimport { FormControlLabel } from \"@material-ui/core\";\n\nfunction Navbar (props) {\n\tconst { classes } = props;\n\tconst { toggleTheme, isDarkMode } = useContext(ThemeContext);\n\tconst { language } = useContext(LanguageContext);\n\tconst languageTranslation = {\n\t\tenglish: {\n\t\t\ttitle: \"Sign In Form\",\n\t\t\tcolorMode: \"Color Mode\"\n\t\t},\n\t\tfrench: {\n\t\t\ttitle: \"Formulaire de connexion\",\n\t\t\tcolorMode: \"Mode de couleur\"\n\t\t},\n\t\tspanish: {\n\t\t\ttitle: \"Formulario de registro\",\n\t\t\tcolorMode: \"Modo de color\"\n\t\t}\n\t};\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\" color={isDarkMode ? \"primary\" : \"default\"}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"Current Language\">\n\t\t\t\t\t\t<VerifiedUserIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography className={classes.title} variant=\"h6\" noWrap>\n\t\t\t\t\t\t{languageTranslation[language].title}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tcontrol={<Switch onChange={toggleTheme} />}\n\t\t\t\t\t\tlabel={languageTranslation[language].colorMode}\n\t\t\t\t\t/>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n\nexport default withStyles(styles)(Navbar);\n","export default (theme) => ({\n\troot: {\n\t\tflexGrow: 1\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t\tdisplay: \"none\",\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\tdisplay: \"block\"\n\t\t}\n\t}\n});\n","import React, { createContext, useState } from \"react\";\n\nconst LoggedInContext = createContext();\n\nfunction LoggedInProvider (props) {\n\tconst [ isLoggedIn, setLoggedIn ] = useState(false);\n\tconst toggleLogin = () => setLoggedIn(!isLoggedIn);\n\treturn (\n\t\t<LoggedInContext.Provider value={{ isLoggedIn, toggleLogin }}>\n\t\t\t{props.children}\n\t\t</LoggedInContext.Provider>\n\t);\n}\n\nexport { LoggedInContext, LoggedInProvider };\n","import React, { useContext } from \"react\";\nimport {\n\tPaper,\n\tAvatar,\n\tTypography,\n\tSelect,\n\tMenuItem,\n\tFormControl,\n\tInputLabel,\n\tInput,\n\tFormControlLabel,\n\tCheckbox,\n\tButton\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles/FormStyles\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { LoggedInContext } from \"./contexts/LoggedInContext\";\n\nconst languageTranslation = {\n\tenglish: {\n\t\tsignIn: \"Sign In\",\n\t\temail: \"Email\",\n\t\tpass: \"Password\",\n\t\trememberMe: \"Remember Me?\",\n\t\tlogOut: \"Log Out?\"\n\t},\n\tspanish: {\n\t\tsignIn: \"Registrarse\",\n\t\temail: \"Email\",\n\t\tpass: \"Contraseña\",\n\t\trememberMe: \"Recuérdame?\",\n\t\tlogOut: \"Cerrar sesión?\"\n\t},\n\tfrench: {\n\t\tsignIn: \"Se connecter\",\n\t\temail: \"Email\",\n\t\tpass: \"Mot de passe\",\n\t\trememberMe: \"Souviens-toi de moi?\",\n\t\tlogOut: \"Connectez - Out?\"\n\t}\n};\n\nfunction Form (props) {\n\tconst { classes } = props;\n\tconst { language, changeLanguage } = useContext(LanguageContext);\n\tconst { isLoggedIn, toggleLogin } = useContext(LoggedInContext);\n\tconst loginForm = (\n\t\t<Paper className={classes.paper}>\n\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t<LockOutlinedIcon />\n\t\t\t</Avatar>\n\t\t\t<Typography variant=\"h5\" className={classes.typo}>\n\t\t\t\t{languageTranslation[language].signIn}\n\t\t\t</Typography>\n\t\t\t<Select value={language} onChange={changeLanguage}>\n\t\t\t\t<MenuItem value=\"english\">English</MenuItem>\n\t\t\t\t<MenuItem value=\"french\">French</MenuItem>\n\t\t\t\t<MenuItem value=\"spanish\">Spanish</MenuItem>\n\t\t\t</Select>\n\t\t\t<form className={classes.form} onSubmit={toggleLogin}>\n\t\t\t\t<FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t<InputLabel htmlFor=\"email\">\n\t\t\t\t\t\t{languageTranslation[language].email}\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Input id=\"email\" name=\"email\" />\n\t\t\t\t</FormControl>\n\t\t\t\t<FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t<InputLabel htmlFor=\"password\">\n\t\t\t\t\t\t{languageTranslation[language].pass}\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Input id=\"password\" name=\"password\" type=\"password\" />\n\t\t\t\t</FormControl>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox color=\"primary\" />}\n\t\t\t\t\tlabel={languageTranslation[language].rememberMe}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclassName={classes.submit}>\n\t\t\t\t\t{languageTranslation[language].signIn}\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</Paper>\n\t);\n\tconst loggedIn = (\n\t\t<Paper className={classes.paper}>\n\t\t\t<CheckCircleIcon classes={{ root: classes.loginIcon }} />\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tonClick={toggleLogin}\n\t\t\t\tfullWidth\n\t\t\t\tcolor=\"secondary\"\n\t\t\t\tclassName={classes.submit}>\n\t\t\t\t{languageTranslation[language].logOut}\n\t\t\t</Button>\n\t\t</Paper>\n\t);\n\treturn (\n\t\t<main className={classes.main}>{isLoggedIn ? loggedIn : loginForm}</main>\n\t);\n}\n\nexport default withStyles(styles)(Form);\n","export default (theme) => ({\n\tmain: {\n\t\twidth: \"auto\",\n\t\tdisplay: \"block\",\n\t\tmarginLeft: theme.spacing(3),\n\t\tmarginRight: theme.spacing(3),\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\twidth: \"400px\",\n\t\t\tmarginLeft: \"auto\",\n\t\t\tmarginRight: \"auto\"\n\t\t}\n\t},\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t\tpadding: `${theme.spacing(2)}px ${theme.spacing(3)}px`\n\t},\n\ttypo: {\n\t\tmarginTop: theme.spacing(2),\n\t\tmarginBottom: theme.spacing(2)\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(0),\n\t\tbackgroundColor: theme.palette.secondary.main\n\t},\n\tform: {\n\t\twidth: \"100%\",\n\t\tmarginTop: theme.spacing(3)\n\t},\n\tsubmit: {\n\t\tmarginTop: theme.spacing(3)\n\t},\n\tloginIcon: {\n\t\tfontSize: \"10rem\",\n\t\tfill: \"#76d275\"\n\t}\n});\n","import React from \"react\";\nimport PageContent from \"./PageContent\";\nimport Navbar from \"./Navbar\";\nimport Form from \"./Form\";\nimport { ThemeProvider } from \"./contexts/ThemeContext\";\nimport { LanguageProvider } from \"./contexts/LanguageContext\";\nimport { LoggedInProvider } from \"./contexts/LoggedInContext\";\n\nfunction App () {\n\treturn (\n\t\t<ThemeProvider>\n\t\t\t<PageContent>\n\t\t\t\t<LanguageProvider>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<LoggedInProvider>\n\t\t\t\t\t\t<Form />\n\t\t\t\t\t</LoggedInProvider>\n\t\t\t\t</LanguageProvider>\n\t\t\t</PageContent>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}